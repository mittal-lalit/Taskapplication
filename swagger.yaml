openapi: 3.0.0
info:
  title: Task Management System API
  description: REST API for managing users, tasks, tags, and audit logs
  version: 1.0.0
servers:
  - url: http://localhost:3000

components:
  securitySchemes:
  bearerAuth:
  type: http
  scheme: bearer
  bearerFormat: JWT

  schemas:
    RegisterUser:
      type: object
      required: [first_name, last_name, email, password]
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string

    LoginUser:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
        password:
          type: string

    Task:
      type: object
      required: [title, description, priority, status]
      properties:
        title:
          type: string
        description:
          type: string
        priority:
          type: string
          enum: [low, medium, high]
        status:
          type: string
          enum: [pending, in-progress, completed]
        dueDate:
          type: string
          format: date

    Tag:
      type: object
      required: [name]
      properties:
        name:
          type: string

security:
  - bearerAuth: []

paths:

  /api/auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
      responses:
        '201':
          description: User registered

  /api/auth/login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
      responses:
        '200':
          description: Authenticated with token
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string

  /api/tasks:
    get:
      summary: Get all tasks (with filters)
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: priority
          schema:
            type: string
        - in: query
          name: sortBy
          schema:
            type: string
        - in: query
          name: order
          schema:
            type: string
        - in: query
          name: tags
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: offset
          schema:
            type: integer
      responses:
        '200':
          description: List of tasks

    post:
      summary: Create a new task
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: Task created

  /api/tasks/{id}:
    get:
      summary: Get task by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Task details

    put:
      summary: Update a task
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: Task updated

    delete:
      summary: Delete a task
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Task deleted

  /api/tasks/{id}/logs:
    get:
      summary: Get audit logs for a task
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Logs returned

  /api/tasks/{id}/tag:
    post:
      summary: Assign a tag to a task
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      responses:
        '200':
          description: Tag linked

  /api/tasks/{id}/tag/{tagId}:
    delete:
      summary: Remove a tag from a task
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: tagId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Tag removed
